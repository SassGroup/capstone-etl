pipeline {
    agent any
    environment {
        //imagename = "vincentstrife/capstone-etl"
        //registryCredential = "dockerVincentStrifeCred"
        dockerImage = ''
        //devSystemAddress="devops@192.168.1.45"
        statusLoop=''
    }
    stages {
        stage('Build') { 
            steps {
                sh 'mvn -DskipTests clean install'
            }
        }
        stage('Build Docker Image'){
            steps {
                script{
                    dockerImage = docker.build("${env.imagename}:v${env.BUILD_NUMBER}")
                }
                // sh """docker build . -t vincentstrife/capstone-etl:v${env.BUILD_NUMBER}"""
            }
        }
        stage('Push Built Image to Docker Hub'){
            steps{
                script{
                    docker.withRegistry('', dockerRegistryCredential) {
                        dockerImage.push()
                        dockerImage.push('latest')
                    }
                }
            }
        }
        stage('Remove Unused docker image') {
            steps{
                sh "docker rmi $imagename:v$BUILD_NUMBER"
                sh "docker rmi $imagename:latest"
            }
        }
        // stage('Kubectl apply deployment on okteto Cloud'){
        //     steps{
        //         dir("Deployment") {
        //             sh "sed -i 's%{image}%$imagename%' ./capstone-etl-okteto.yaml"
        //             sh "sed -i 's%{version}%$BUILD_NUMBER%' ./capstone-etl-okteto.yaml"
        //             sh 'kubectl apply -f ./capstone-etl-okteto.yaml'
        //         }
        //     } 
        // }
        // stage('Kubernetes Pods status check') {
        //     steps{
        //         script{
        //             statusLoop=["ViewStatus":true,"Rollback":false]
        //             while(statusLoop["ViewStatus"]){
        //                 sh 'kubectl get pods -o wide'
        //                 statusLoop=input(message: 'Check radio button and perform the following action', ok: 'Submit',
        //                     parameters: [
        //                         booleanParam(name: 'ViewStatus', defaultValue: false, description: 'Check the radio button to once again view the pods status'),
        //                         booleanParam(name: 'Rollback', defaultValue: false, description: 'Check the radio button to rollback to previous deployment')
        //                     ]
        //                 )
        //             }
        //         }
        //     }
        // }
        // stage('Kube Deployment Rollback'){
        //     when{
        //         expression {statusLoop["Rollback"]==true}
        //     }
        //     steps{
        //         echo "Need to check for the rollback command"
        //     }
        // }
    }
}